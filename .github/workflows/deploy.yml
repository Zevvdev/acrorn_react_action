name: Build & Deploy React (Hello EC2)


on:
  push:
    branches: [ master ]

# 권한 설정: 리포지토리 컨텐츠 읽기 권한만 필요
permissions:
  contents: read

# 동시성 설정: 같은 브랜치에서 여러 워크플로우 실행 시 이전 것 취소
concurrency:
  group: deploy-react-ec2-${{ github.ref }}
  cancel-in-progress: true


jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    # 배포 작업 순서
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

    # 단일 브랜치만 체크아웃하여 속도 향상
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

    # Node.js 환경 설정 및 npm 캐시 활성화
      - name: Install deps
        run: npm ci

    # 의존성 설치 (package-lock.json 기준)
      - name: Build (Vite)
        run: npm run build   # 결과물: ./dist


      - name: Clean remote dir
        uses: appleboy/ssh-action@v1.2.0
        with:
          host:     ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key:      ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e
            DEPLOY_DIR="/home/ec2-user/nginx/nginx-html"
            mkdir -p "$DEPLOY_DIR"
            rm -rf "$DEPLOY_DIR"/*


      - name: Upload dist to EC2 (strip folder)
        uses: appleboy/scp-action@v0.1.7
        with:
          host:     ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key:      ${{ secrets.EC2_SSH_KEY }}
          source:   "dist/**"                 # 하위 전체
          target:   "/home/ec2-user/nginx/nginx-html"
          strip_components: 1                 # dist/ 제거 → 내용만 배치